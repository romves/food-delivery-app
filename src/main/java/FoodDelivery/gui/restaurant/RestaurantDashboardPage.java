/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FoodDelivery.gui.restaurant;

import FoodDelivery.dao.CourierDAO;
import FoodDelivery.dao.OrderDAO;
import FoodDelivery.dao.RestaurantDAO;
import FoodDelivery.database.DatabaseUtility;
import FoodDelivery.gui.login.LoginChooser;
import FoodDelivery.models.Restaurant;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class RestaurantDashboardPage extends javax.swing.JFrame {

    private int restaurantId;
    private RestaurantDAO restoDB = new RestaurantDAO();
    DefaultTableModel modelorderDetail;
    DefaultTableModel modelOrderWaitingList;

    /**
     * Creates new form RestaurantDashboardPage
     */
    public RestaurantDashboardPage(int id) {
        this.restaurantId = id;
        initComponents();
        this.modelorderDetail = (DefaultTableModel) orderDetailTableList.getModel();
        this.modelOrderWaitingList = (DefaultTableModel) orderWaitingListTable.getModel();
        disableRestaurantField();
        loadRestaurantData();
        populateOrderWaitingList();
        populateOrderDetail(-1);
//        populateProduct(true);
//        populateTopSelling();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        restaurantAddressLabel = new javax.swing.JLabel();
        restaurantAddressField = new javax.swing.JTextField();
        restaurantPhoneLabel = new javax.swing.JLabel();
        restaurantPhoneField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        restaurantEmailField = new javax.swing.JTextField();
        restaurantPasswordField = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        restaurantBalanceField = new javax.swing.JTextField();
        restaurantNameLabel = new javax.swing.JLabel();
        restaurantNameField = new javax.swing.JTextField();
        restaurantIDLabel = new javax.swing.JLabel();
        restaurantIDField = new javax.swing.JTextField();
        restaurantDescLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        restaurantDescArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderWaitingListTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        orderDetailTableList = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        LogoutBtn = new javax.swing.JButton();
        acceptOrderButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Order Waiting List");

        restaurantAddressLabel.setText("Address:");

        restaurantPhoneLabel.setText("Phone Number:");

        jLabel2.setText("Email");

        jLabel3.setText("Password:");

        jLabel4.setText("Balance");

        restaurantBalanceField.setEnabled(false);

        restaurantNameLabel.setText("Name:");

        restaurantIDLabel.setText("ID:");

        restaurantIDField.setEnabled(false);

        restaurantDescLabel.setText("Description:");

        restaurantDescArea.setColumns(20);
        restaurantDescArea.setRows(5);
        jScrollPane1.setViewportView(restaurantDescArea);

        orderWaitingListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "order_id", "user_id", "order_date", "order_status", "payment_id"
            }
        ));
        jScrollPane2.setViewportView(orderWaitingListTable);

        orderDetailTableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "product_id", "quantity"
            }
        ));
        jScrollPane3.setViewportView(orderDetailTableList);

        jButton1.setText("> Manage products");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        saveBtn.setText("Save");
        saveBtn.setEnabled(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 48)); // NOI18N
        jLabel6.setText("Resto Dashboard");

        cancelBtn.setText("Cancel");
        cancelBtn.setEnabled(false);
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        LogoutBtn.setText("Logout");
        LogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBtnActionPerformed(evt);
            }
        });

        acceptOrderButton.setText("Accept Order");
        acceptOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptOrderButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(restaurantIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(restaurantNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(restaurantDescLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(restaurantAddressLabel)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(restaurantPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(restaurantBalanceField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(editBtn)
                                    .addGap(45, 45, 45)
                                    .addComponent(saveBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cancelBtn))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(restaurantPhoneField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(restaurantPasswordField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(restaurantNameField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(restaurantEmailField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(restaurantAddressField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(restaurantIDField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(206, 206, 206))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshButton)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(LogoutBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(acceptOrderButton)
                .addGap(231, 231, 231))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acceptOrderButton)
                        .addGap(19, 19, 19)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(LogoutBtn)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel6)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restaurantIDLabel)
                            .addComponent(restaurantIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restaurantNameLabel)
                            .addComponent(restaurantNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restaurantEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restaurantPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restaurantAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restaurantAddressLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restaurantDescLabel))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restaurantPhoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restaurantPhoneLabel))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(restaurantBalanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editBtn)
                            .addComponent(saveBtn)
                            .addComponent(cancelBtn))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        RestaurantProductPage pages = new RestaurantProductPage(this.restaurantId);
        pages.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        int id = Integer.parseInt(restaurantIDField.getText());
        String name = restaurantNameField.getText();
        String email = restaurantEmailField.getText();
        String password = new String(restaurantPasswordField.getPassword());
        String address = restaurantAddressField.getText();
        String desc = restaurantDescArea.getText();
        String phone = restaurantPhoneField.getText();
        Restaurant restaurant = new Restaurant(id, name, email, password, address, desc, phone, 0.0);
        RestaurantDAO resDAO = new RestaurantDAO();
        resDAO.updateRestaurant(restaurant);
        enableActionBtn();
        disableRestaurantField();
    }//GEN-LAST:event_saveBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        enableActionBtn();
        disableRestaurantField();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        disableActionBtn();
        enableRestaurantField();
    }//GEN-LAST:event_editBtnActionPerformed

    private void LogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBtnActionPerformed
        // TODO add your handling code here:
        LoginChooser page = new LoginChooser();
        page.setVisible(true);
        dispose();
    }//GEN-LAST:event_LogoutBtnActionPerformed

    private void acceptOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptOrderButtonActionPerformed
        CourierDAO courier = new CourierDAO();
        int selectedRow = orderWaitingListTable.getSelectedRow();
        if (selectedRow != -1) {
            int orderId = Integer.parseInt(orderWaitingListTable.getValueAt(selectedRow, 0).toString());
//            int courierId = courier.assignCourierToOrder(orderId);
            System.out.println(orderId);
            OrderDAO orderDAO = new OrderDAO();
            orderDAO.setOrderStatusOnProcess(orderId);
        } else {
            System.out.println("Tidak ada pesanan yang dipilih.");
        }
    }//GEN-LAST:event_acceptOrderButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        populateOrderWaitingList();

         System.out.println("");    }//GEN-LAST:event_refreshButtonActionPerformed

    void loadRestaurantData() {
        Restaurant resto = restoDB.getRestaurantById(this.restaurantId);
        String id = Integer.toString(resto.getId());
        String name = resto.getName();
        String email = resto.getEmail();
        String password = resto.getPassword();
        String address = resto.getAddress();
        String description = resto.getDescription();
        String phoneNumber = resto.getPhoneNumber();
        double balanceValue = resto.getBalance();
        String balance;
        if (balanceValue == 0.0) {
            balance = "0"; // or any other default value or representation for zero balance
        } else {
            balance = Double.toString(balanceValue);
        }

        setRestaurantField(id, name, email, password, address, description, phoneNumber, balance);
    }

    public void setRestaurantField(String restaurantID, String restaurantName, String restaurantEmail, String restaurantPassword, String restaurantAddress, String restaurantDesc, String restaurantPhone, String restaurantBalance) {
        restaurantIDField.setText(restaurantID);
        restaurantNameField.setText(restaurantName);
        restaurantEmailField.setText(restaurantEmail);
        restaurantPasswordField.setText(restaurantPassword);
        restaurantAddressField.setText(restaurantAddress);
        restaurantDescArea.setText(restaurantDesc);
        restaurantPhoneField.setText(restaurantPhone);
        restaurantBalanceField.setText(restaurantBalance);
    }

    public void disableRestaurantField() {
        restaurantIDField.setEditable(false);
        restaurantNameField.setEditable(false);
        restaurantEmailField.setEditable(false);
        restaurantPasswordField.setEditable(false);
        restaurantAddressField.setEditable(false);
        restaurantDescArea.setEditable(false);
        restaurantPhoneField.setEditable(false);
        restaurantBalanceField.setEditable(false);
    }

    public void enableActionBtn() {
        editBtn.setEnabled(true);
        saveBtn.setEnabled(false);
        cancelBtn.setEnabled(false);
    }

    public void disableActionBtn() {
        editBtn.setEnabled(false);
        saveBtn.setEnabled(true);
        cancelBtn.setEnabled(true);
    }

    public void enableRestaurantField() {
        restaurantIDField.setEditable(true);
        restaurantNameField.setEditable(true);
        restaurantEmailField.setEditable(true);
        restaurantPasswordField.setEditable(true);
        restaurantAddressField.setEditable(true);
        restaurantDescArea.setEditable(true);
        restaurantPhoneField.setEditable(true);
        restaurantBalanceField.setEditable(true);
    }

    void populateOrderWaitingList() {
        this.modelOrderWaitingList.setRowCount(0);
        String sql = "select order_id, user_id, order_date,order_status, payment_id from OrderTable where restaurant_id= ? and order_status='PENDING'";

        try (Connection connection = DatabaseUtility.getConnection(); PreparedStatement statement = connection.prepareStatement(sql);) {
            statement.setInt(1, this.restaurantId);
            try (ResultSet resultSet = statement.executeQuery()) {
                ResultSetMetaData metaData = resultSet.getMetaData();
                int columnCount = metaData.getColumnCount();

                Object[] rowData = new Object[columnCount];
                while (resultSet.next()) {
                    for (int i = 1; i <= columnCount; i++) {
                        rowData[i - 1] = resultSet.getString(i);
                    }
                    this.modelOrderWaitingList.addRow(rowData);
                }

                if (orderWaitingListTable.getRowCount() > 0) {
                    orderWaitingListTable.setRowSelectionInterval(0, 0);

                    // Menambahkan listener untuk pemilihan baris pada tabel
                    orderWaitingListTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                        @Override
                        public void valueChanged(ListSelectionEvent e) {
                            if (!e.getValueIsAdjusting()) {
                                int selectedRow = orderWaitingListTable.getSelectedRow();
                                if (selectedRow != -1) {
                                    // Mendapatkan nilai order_id dari baris yang dipilih
                                    int orderId = Integer.parseInt(orderWaitingListTable.getValueAt(selectedRow, 0).toString());

                                    // Memanggil populateOrderDetail dengan order_id sebagai parameter
                                    populateOrderDetail(orderId);

                                }
                            }
                        }
                    });

                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    void populateOrderDetail(int orderId) {
        this.modelorderDetail.setRowCount(0); // Hapus semua baris sebelum memuat data baru
        String sql = "select product_id, quantity from OrderDetails where order_id= ?";

        try (Connection connection = DatabaseUtility.getConnection(); PreparedStatement statement = connection.prepareStatement(sql);) {
            statement.setInt(1, orderId);  // Menggunakan orderId sebagai parameter

            try (ResultSet resultSet = statement.executeQuery()) {
                ResultSetMetaData metaData = resultSet.getMetaData();
                int columnCount = metaData.getColumnCount();

                // Hapus kolom yang sudah ada sebelumnya
                this.modelorderDetail.setColumnCount(0);

                // Tambahkan kolom sesuai dengan metadata
                for (int i = 1; i <= columnCount; i++) {
                    this.modelorderDetail.addColumn(metaData.getColumnName(i));
                }

                Object[] rowData = new Object[columnCount];
                while (resultSet.next()) {
                    for (int i = 1; i <= columnCount; i++) {
                        rowData[i - 1] = resultSet.getString(i);
                    }
                    this.modelorderDetail.addRow(rowData);
                }

                if (orderDetailTableList.getRowCount() > 0) {
                    orderDetailTableList.setRowSelectionInterval(0, 0);
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestaurantDashboardPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestaurantDashboardPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestaurantDashboardPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestaurantDashboardPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestaurantDashboardPage(1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogoutBtn;
    private javax.swing.JButton acceptOrderButton;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable orderDetailTableList;
    private javax.swing.JTable orderWaitingListTable;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField restaurantAddressField;
    private javax.swing.JLabel restaurantAddressLabel;
    private javax.swing.JTextField restaurantBalanceField;
    private javax.swing.JTextArea restaurantDescArea;
    private javax.swing.JLabel restaurantDescLabel;
    private javax.swing.JTextField restaurantEmailField;
    private javax.swing.JTextField restaurantIDField;
    private javax.swing.JLabel restaurantIDLabel;
    private javax.swing.JTextField restaurantNameField;
    private javax.swing.JLabel restaurantNameLabel;
    private javax.swing.JPasswordField restaurantPasswordField;
    private javax.swing.JTextField restaurantPhoneField;
    private javax.swing.JLabel restaurantPhoneLabel;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables
}
